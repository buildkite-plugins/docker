#!/bin/bash

set -euo pipefail

debug_mode='off'
if [[ "${BUILDKITE_PLUGIN_DOCKER_DEBUG:-false}" =~ (true|on|1) ]] ; then
  echo "--- :hammer: Enabling debug mode"
  debug_mode='on'
  set -x
fi

if [[ -z "${BUILDKITE_PLUGIN_DOCKER_WORKDIR:-}" -a "${BUILDKITE_PLUGIN_DOCKER_BUILD:-true}" =~ (true|on|1) ]] ]] ; then
  echo "Must set a workdir"
  exit 1
fi

if [[ -z "${BUILDKITE_PLUGIN_DOCKER_SHELL:-}" ]] ; then
  BUILDKITE_PLUGIN_DOCKER_SHELL="bash"
fi

args=(
  "-it"
  "--rm"
  "--volume" "$PWD:${BUILDKITE_PLUGIN_DOCKER_WORKDIR}"
  "--workdir" "${BUILDKITE_PLUGIN_DOCKER_WORKDIR}"
)

if [[ ! -z "${BUILDKITE_PLUGIN_DOCKER_USER:-}" ]] ; then
  args+=(
    "-u" "${BUILDKITE_PLUGIN_DOCKER_USER:-}"
  )
fi

# Handle the mount-buildkite-agent option
if [[ "${BUILDKITE_PLUGIN_DOCKER_MOUNT_BUILDKITE_AGENT:-true}" =~ (true|on|1) ]] ; then
  args+=(
    "--env" "BUILDKITE_JOB_ID"
    "--env" "BUILDKITE_BUILD_ID"
    "--env" "BUILDKITE_AGENT_ACCESS_TOKEN"
    "--volume" "$(which buildkite-agent):/usr/bin/buildkite-agent"
  )
fi

# Handle any extra environment variables
while IFS='=' read -r name _ ; do
  if [[ $name =~ ^(BUILDKITE_PLUGIN_DOCKER_ENVIRONMENT_[0-9]+) ]] ; then
    args+=( "--env" "${!name}" )
  fi
done < <(env | sort)

[[ "${BUILDKITE_PLUGIN_DOCKER_BUILD:-false}" =~ (true|on|1) ]] ;then
  echo "--- :docker: Building ${BUILDKITE_PLUGIN_DOCKER_IMAGE} in ${PWD}"
  [[ "${debug_mode:-off}" =~ (on) ]] && echo Running: docker build -t "${BUILDKITE_PLUGIN_DOCKER_IMAGE}" .
  docker build -t "${BUILDKITE_PLUGIN_DOCKER_IMAGE}" .
else
  echo "--- :docker: Running ${BUILDKITE_COMMAND} in ${BUILDKITE_PLUGIN_DOCKER_IMAGE}"
  [[ "${debug_mode:-off}" =~ (on) ]] && echo Running: docker run "${args[@]}" "${BUILDKITE_PLUGIN_DOCKER_IMAGE}" "${BUILDKITE_PLUGIN_DOCKER_SHELL}" -c "${BUILDKITE_COMMAND}"
  docker run "${args[@]}" "${BUILDKITE_PLUGIN_DOCKER_IMAGE}" "${BUILDKITE_PLUGIN_DOCKER_SHELL}" -c "${BUILDKITE_COMMAND}"
fi
